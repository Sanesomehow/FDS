#include<stdio.h>

int main() {
    
    int type;
    int a[3][3],s[2][2],b[3][3],min,i,j,k,max;
    int *p,*q;
    
    printf("Input \n1 for sum \n2 for matrix multiplication \n3 for saddle point\n");
    scanf("%d",&type);
    
    switch (type) {
     
    case 1:
        
        printf("Sum of matrix\n");
        p = &a[0][0];
        q = &b[0][0];
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                printf("a[%d] [%d] = ",i,j);
                scanf("%d",(p + ((i*3) + j)));
            }
        }
        
         for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                
                printf("%d \t",*(p+((i*3)+j)));
                
            }
        }
        
       for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                printf("b[%d] [%d] = ",i,j);
                scanf("%d",(q + ((i*3) + j)));
            }
        }
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                
                printf("%d \t",*(q+((i*3)+j)));
                
            }
        }
        int c[3][3];
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                c[i][j] = *(p + ((i*3) + j)) + *(q + ((i*3) + j));
            }
        }
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                printf("Sum : [%d] [%d] = [%d]\n",i,j,c[i][j]);
                
            }
        }
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                printf("%d",c[i][j]);
                printf("\t");
            }
            printf("\n");
        }
        break;
        
    case 2:
        
        printf("Matrix Multiplication\n");
        p = &a[0][0];
        q = &b[0][0];
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                printf("a[%d] [%d] = ",i,j);
                scanf("%d",(p + ((i*3) + j)));
            }
        }
        
         for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                
                printf("%d \t",*(p+((i*3)+j)));
                
            }
        }
        
       for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                printf("b[%d] [%d] = ",i,j);
                scanf("%d",(q + ((i*3) + j)));
            }
        }
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                
                printf("%d \t",*(q+((i*3)+j)));
                
            }
        }
        int d[3][3];
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                d[i][j] = 0;
            }
        }
        
         for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                
                printf("%d \t",d[i][j]);
                
            }
        }
        printf("\n");
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                for(k=0;k<3;k++) {
                    d[i][j] = d[i][j] + (*(p + ((i*3) + k))) * (*(q + ((k*3) + j)));
                }
            }
        }
        
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                printf("Product : [%d] [%d] = [%d]\n",i,j,d[i][j]);
                
            }
        }
        printf("\n");
        
        printf("Product matrix d : \n");
        for(i=0;i<3;i++) {
            for(j=0;j<3;j++) {
                printf("%d",d[i][j]);
                printf("\t");
            }
            printf("\n \n");
        }
        break;
     
    case 3:
        
        printf("Find Saddle pt.\n");
        for(i=0;i<3;i++) {
            
            for(j=0;j<3;j++) {
                printf("a[%d][%d] = ",i,j);
                scanf("%d",&a[i][j]);
                printf("\n");
            }
        }
        
        for(i=0;i<3;i++) {
            
            for(j=0;j<3;j++) {
                printf("%d",a[i][j]);
                printf("\t");
            }
            printf("\n");
        }
        
        for(i=0;i<2;i++) {
            
            for(j=0;j<2;j++) {
                s[i][j] = 0;
            }
        }
        
        printf("\n");
        
        for(i=0;i<2;i++) {
            
            for(j=0;j<2;j++) {
                printf("%d \t",s[i][j]);
            }
            printf("\n");
        }
        
        for(i=0;i<3;i++) {
            min = a[i][0];
            
            for(j=0;j<3;j++) {
                
                if(min >= a[i][j]) {
                    
                    min = a[i][j];
                    s[0][0] = i;
                    s[0][1] = j;
                }
            }
            j = s[0][1];
            max = a[0][j];
            
            for(k=0;k<3;k++) {
                if(max <= a[k][j]) {
                    max = a[k][j];
                    s[1][0] = k;
                    s[1][1] = j;
                }
            }
            if(min == max) {
                
                if(s[0][0] == s[1][0] && s[0][1] == s[1][1]) {
                    
                    printf("The saddle point is %d which is at a[%d][%d] ",min,s[0][0],s[0][1]);
                }
            }
        }
        return 0;
        break;
        
    }
    
}
